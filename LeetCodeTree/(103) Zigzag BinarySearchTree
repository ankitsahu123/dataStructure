/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
List<List<Integer>> result = new LinkedList();
if(root == null) return result;
Queue<TreeNode> q = new LinkedList();

    q.add(root);
     int count =0 ;
    while(!q.isEmpty()){
        LinkedList<Integer> sublist = new LinkedList();
        int level = q.size();
       
          for(int i=0;i<level;i++){          
              // traverse all nodes in same level
            TreeNode current = q.remove(); 
                if(current.left != null) q.add(current.left);
                if(current.right != null) q.add(current.right);
          
          
            sublist.add(current.val);                //  add all same level ndes to an arraylist 
        }
           
          
       
         if(result.size() % 2 == 1){                     //  if the level is an even number,result  
                Collections.reverse(sublist);           //  has a size of odd number,and we want to
        }  
            result.add(sublist);
                                                    //  reverse the even levels 
       
    }
        
    return result;
}
}
